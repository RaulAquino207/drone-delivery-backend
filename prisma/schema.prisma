// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Warehouse {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  drones Drone[]
  orders Order[]
  admin Admin?
  position Position @relation(fields: [positionId], references: [id])
  positionId String @db.ObjectId @unique
}

model Drone {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  status String
  speed Int
  orders Order[]
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String @db.ObjectId
  position Position @relation(fields: [positionId], references: [id])
  positionId String @db.ObjectId @unique
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String
  orders Order[]
  position Position @relation(fields: [positionId], references: [id])
  positionId String @db.ObjectId @unique
}

model Admin {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String @db.ObjectId @unique
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  status String
  section String?
  drone Drone @relation(fields: [droneId], references: [id])
  droneId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String @db.ObjectId
}

model Position {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  latitude Float
  longitude Float
  user User?
  warehouse Warehouse?
  drone Drone?
}
